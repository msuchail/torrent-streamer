services:
    transmission:
        image: linuxserver/transmission
        container_name: transmission
        environment:
            PUID: 1000
            PGID: 1000
            TZ: 'Europe/London'
        volumes:
            - ./storage/private/torrents:/torrents
            - ./storage/public/downloads:/downloads
        ports:
            - 9091:9091
            - 51413:51413
            - 51413:51413/udp
        restart: no

    web:
        container_name: torrentstream
        env_file:
            - .env
        build:
            context: ..
            dockerfile: docker/Dockerfile
        networks:
            - default
        restart: no
        volumes:
            - ./storage:/var/www/html/storage/app
        depends_on:
            transmission:
                condition: service_started
            mysql:
                condition: service_healthy
        ports:
            -   80:8080


    queue:
        deploy:
            mode: replicated
            replicas: 2
        env_file:
            - .env
        build:
            context: ..
            dockerfile: docker/Dockerfile
        networks:
            - default
        restart: no
        volumes:
            - ./storage:/var/www/html/storage/app
        depends_on:
            transmission:
                condition: service_started
            mysql:
                condition: service_healthy
        stop_signal: SIGTERM
        healthcheck:
            # This is our native healthcheck script for the queue
            test: [ "CMD", "healthcheck-queue" ]
            start_period: 10s
        command: php artisan queue:work --timeout=1200

    mysql:
        ports:
            -   3306:3306
        env_file:
            - .env
        image: mysql
        restart: no
        networks:
            - default
        volumes:
            - ./mysql-data:/var/lib/mysql
        healthcheck:
            test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
            timeout: 20s
            retries: 10

networks:
    default:
